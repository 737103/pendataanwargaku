{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/loading.tsx"],"sourcesContent":["export function FullPageLoading() {\n  return (\n    <div className=\"flex min-h-screen w-full items-center justify-center bg-background\">\n      <div className=\"h-8 w-8 animate-spin rounded-full border-4 border-primary border-t-transparent\" />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAO,SAAS;IACd,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;;;;;;;;;;AAGrB;KANgB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/auth-guard.tsx"],"sourcesContent":["\"use client\";\n\nimport { useRouter } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { FullPageLoading } from '@/components/loading';\n\ntype AuthGuardProps = {\n  children: React.ReactNode;\n  role: 'admin' | 'user';\n};\n\nexport function AuthGuard({ children, role }: AuthGuardProps) {\n  const router = useRouter();\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // We need to use a timeout to allow the login page to set the userRole\n    // in localStorage before this guard runs.\n    setTimeout(() => {\n        const storedRole = localStorage.getItem('userRole');\n        if (storedRole === role) {\n            setIsAuthorized(true);\n        } else {\n            router.push('/login');\n        }\n        setLoading(false);\n    }, 500);\n  }, [router, role]);\n\n  if (loading) {\n    return <FullPageLoading />;\n  }\n\n  if (!isAuthorized) {\n    // Return null or a loading spinner while redirecting to avoid flashing content.\n    return <FullPageLoading />;\n  }\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAWO,SAAS,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAkB;;IAC1D,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,uEAAuE;YACvE,0CAA0C;YAC1C;uCAAW;oBACP,MAAM,aAAa,aAAa,OAAO,CAAC;oBACxC,IAAI,eAAe,MAAM;wBACrB,gBAAgB;oBACpB,OAAO;wBACH,OAAO,IAAI,CAAC;oBAChB;oBACA,WAAW;gBACf;sCAAG;QACL;8BAAG;QAAC;QAAQ;KAAK;IAEjB,IAAI,SAAS;QACX,qBAAO,6LAAC,gIAAA,CAAA,kBAAe;;;;;IACzB;IAEA,IAAI,CAAC,cAAc;QACjB,gFAAgF;QAChF,qBAAO,6LAAC,gIAAA,CAAA,kBAAe;;;;;IACzB;IAEA,qBAAO;kBAAG;;AACZ;GA7BgB;;QACC,qIAAA,CAAA,YAAS;;;KADV","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/layout.tsx"],"sourcesContent":["\n'use client';\n\nimport { AuthGuard } from '@/components/auth-guard';\n\nexport default function AdminLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <AuthGuard role=\"admin\">\n      <div className=\"min-h-screen p-4 sm:p-6 lg:p-8\">\n        {children}\n      </div>\n    </AuthGuard>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAFA;;;AAIe,SAAS,YAAY,EAClC,QAAQ,EAGT;IACC,qBACE,6LAAC,sIAAA,CAAA,YAAS;QAAC,MAAK;kBACd,cAAA,6LAAC;YAAI,WAAU;sBACZ;;;;;;;;;;;AAIT;KAZwB","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}